openapi: 3.0.3
info:
  title: MCP VOICEVOX Go API
  description: |
    VOICEVOX Model Context Protocol Server API
    
    このAPIは、VOICEVOXエンジンを使用してテキストを音声に変換するMCPサーバーです。
    HTTP/WebSocketとStdioの両方のインターフェースをサポートしています。
  version: 1.0.0
  contact:
    name: MCP VOICEVOX Go
    url: https://github.com/metapox/mcp-voicevox-go
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development server
  - url: ws://localhost:8080/ws
    description: WebSocket endpoint

paths:
  /health:
    get:
      summary: Health check
      description: サーバーの健康状態を確認します
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  timestamp:
                    type: string
                    format: date-time
                  voicevox_status:
                    type: string
                    example: "connected"

  /speakers:
    get:
      summary: Get available speakers
      description: 利用可能な話者一覧を取得します
      responses:
        '200':
          description: List of available speakers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Speaker'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /synthesize:
    post:
      summary: Synthesize speech
      description: テキストを音声に変換します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynthesizeRequest'
      responses:
        '200':
          description: Speech synthesis successful
          content:
            audio/wav:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /ws:
    get:
      summary: WebSocket endpoint for MCP protocol
      description: |
        Model Context Protocol over WebSocket
        
        このエンドポイントはMCPプロトコルをWebSocket経由で提供します。
        クライアントはJSON-RPC 2.0形式でリクエストを送信します。
      responses:
        '101':
          description: WebSocket connection established
        '400':
          description: Bad request - WebSocket upgrade failed

components:
  schemas:
    Speaker:
      type: object
      properties:
        name:
          type: string
          description: 話者名
          example: "四国めたん"
        speaker_uuid:
          type: string
          description: 話者UUID
          example: "7ffcb7ce-00ec-4bdc-82cd-45a8889e43ff"
        styles:
          type: array
          items:
            $ref: '#/components/schemas/Style'

    Style:
      type: object
      properties:
        name:
          type: string
          description: スタイル名
          example: "ノーマル"
        id:
          type: integer
          description: スタイルID
          example: 2

    SynthesizeRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: 音声に変換するテキスト
          example: "こんにちは、世界！"
          maxLength: 1000
        speaker_id:
          type: integer
          description: 話者ID（省略時はデフォルト話者を使用）
          example: 3
          minimum: 0
        speed_scale:
          type: number
          description: 話速（0.5-2.0）
          example: 1.0
          minimum: 0.5
          maximum: 2.0
        pitch_scale:
          type: number
          description: 音高（-0.15-0.15）
          example: 0.0
          minimum: -0.15
          maximum: 0.15
        intonation_scale:
          type: number
          description: 抑揚（0.0-2.0）
          example: 1.0
          minimum: 0.0
          maximum: 2.0

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              description: エラーコード
              example: -32603
            message:
              type: string
              description: エラーメッセージ
              example: "Internal error"

    MCPRequest:
      type: object
      required:
        - jsonrpc
        - method
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
          description: JSON-RPC version
        id:
          oneOf:
            - type: string
            - type: integer
            - type: "null"
          description: Request ID
        method:
          type: string
          description: Method name
          enum:
            - "initialize"
            - "tools/list"
            - "tools/call"
        params:
          type: object
          description: Method parameters

    MCPResponse:
      type: object
      required:
        - jsonrpc
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
          description: JSON-RPC version
        id:
          oneOf:
            - type: string
            - type: integer
            - type: "null"
          description: Request ID
        result:
          type: object
          description: Method result (present on success)
        error:
          $ref: '#/components/schemas/MCPError'

    MCPError:
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message

    Tool:
      type: object
      properties:
        name:
          type: string
          description: Tool name
        description:
          type: string
          description: Tool description
        inputSchema:
          type: object
          description: JSON Schema for tool input

tags:
  - name: Health
    description: Health check endpoints
  - name: Speech
    description: Speech synthesis endpoints
  - name: MCP
    description: Model Context Protocol endpoints
